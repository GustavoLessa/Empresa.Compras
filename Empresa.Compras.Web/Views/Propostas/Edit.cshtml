@model Empresa.Compras.Entities.Proposta

@{
    ViewBag.Title = "Alterar proposta";
}
<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Alterar proposta - @Model.Nome</h4>
    </div>

    @using (Html.BeginForm())
    {
    <div class="panel-body">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.IdProposta)
        @Html.HiddenFor(model => model.DataProposta)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, new { @class = "control-label" })
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.DataProposta, "Data da proposta", new { @class = "control-label" })
            @Html.EditorFor(model => model.DataProposta, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataData(this,event)", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.DataProposta, "", new { @class = "text-danger" })
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DescricaoGeral, "Descrição", new { @class = "control-label" })
            @Html.EditorFor(model => model.DescricaoGeral, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescricaoGeral, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorProposta, "Valor da proposta", new { @class = "control-label" })
            @Html.EditorFor(model => model.ValorProposta, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ValorProposta, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
            {
            new SelectListItem() {Text = "Aprovada", Value="Aprovada"},
            new SelectListItem() {Text = "Reprovada", Value="Reprovada"},
            new SelectListItem() {Text = "Pendente Analise", Value="PendenteAnalise"},
            new SelectListItem() {Text = "Pendente Diretoria", Value="PendenteDiretoria"}

            }, "Status", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AprovadoPeloAnalista, "Aprovada pelo analista Financeiro?", new { @class = "control-label" })
            @Html.EditorFor(model => model.AprovadoPeloAnalista)
            @Html.ValidationMessageFor(model => model.AprovadoPeloAnalista, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AprovadoPeloDiretor, "Aprovada pelo diretor Financeiro?", new { @class = "control-label" })
            @Html.EditorFor(model => model.AprovadoPeloDiretor)
            @Html.ValidationMessageFor(model => model.AprovadoPeloDiretor, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Fornecedor", new { @class = "control-label" })
            @Html.DropDownList("IdFornecedor", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Fornecedor, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCategoria, "Categorias")
            @Html.DropDownList("IdCategoria", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
        </div>


        <div class="panel-footer">
            <input type="submit" value="Salvar" class="btn btn-primary" />
            @Html.ActionLink("Cancelar e retornar", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
    }
</div>
